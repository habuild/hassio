#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the SBFspot service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

CONFIG_PATH=/data/options.json
#CFG_PATH=/usr/bin/sbfspot/SBFspot.cfg
#CFG_UPLOAD_PATH=/usr/bin/sbfspot/SBFspotUpload.cfg

# --- GENERATE CONFIG --
message=$(echo "PWD is current directory $(pwd)")
bashio::log.debug "${message:=""}"
cd /

message=$(echo "PWD is current directory $(pwd)")
bashio::log.debug "${message:=""}"

# ---- Print Host sys info
message=$(echo "$(uname -smrv)")
bashio::log.info
bashio::log.info ${__BASHIO_COLORS_CYAN} "${message:="Hello World..."}"
bashio::log.info

# ---- Print Host BT Controller
message=$(echo "[Host Bluetooth MAC Address] $(bluetoothctl list)")
bashio::log.info
bashio::log.info ${__BASHIO_COLORS_BLUE} "${message:="Hello World..."}"
bashio::log.info

#set -x

 var="$(jq --raw-output '.Sensors_HA' $CONFIG_PATH)"
65 if bashio::var.equals "${var}" "No"; then
66    bashio::log.yellow '|   SKIPPING MQTT SENSOR CREATION   |'
67
68 elif bashio::var.equals "${var}" "Create"; then
69      bashio::log.magenta '|   INITIALISE MQTT SENSOR CREATION   |'
70      /usr/bin/sbfspot/mqttSensorConfig
71
72 elif bashio::var.equals "$var" "Purge"; then
73      bashio::log.red '|    PURGING SENSORS FROM MQTT    |'
74      bashio::log.red '|        CONFIRM REMOVAL IN       |'
75      bashio::log.red '|        HA MQTT INTEGRATION      |'
76      bashio::log.red '|     MQTT BROKER RETAINED MSGS   |'
77      bashio::log.red '|            STATISTICS           |'
78      /usr/bin/sbfspot/purgeSen
79 else
80     bashio::log.cyan '|    No One knows how you got here    |'
81     bashio::log.cyan '|     check your option selection     |'
82 fi

   
# ---- RUN ----
message=$(echo "[Starting SBFspotUpload]")
bashio::log.info ${__BASHIO_COLORS_MAGENTA} "${message:=""}"

# ---- Symbolic Links ----
ln -sf /usr/bin/sbfspot/SBFspot /SBFspot
ln -sf /usr/bin/sbfspot/SBFspot.cfg /SBFspot.cfg
ln -sf /usr/bin/sbfspot/SBFspotUpload.cfg /SBFspotUpload.cfg

# cron
message=$(echo "[Starting cron in foreground]")
bashio::log.info "${message:=""}"
exec /usr/sbin/crond -f
