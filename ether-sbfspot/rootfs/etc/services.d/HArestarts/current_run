#!/usr/bin/with-contenv python

import websockets
import asyncio

import json
import datetime
import time

token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhMjdlZWQ3NTU2YjU0MDkwYTE4MjJhMTFlYjI4Y2M4ZSIsImlhdCI6MTY2Njc4MTIyOCwiZXhwIjoxOTgyMTQxMjI4fQ.V_3lkaaARk3xpEjqZFuwWY0gDGoS_-JV4ML3OeeJ7Qs'  # fill in your token
host = 'localhost'      # fill in your Home Assistant IP-address or domain

port = 8123
cache = {} # cache
entities = [
    "sensor.sma_serial_no",
    "alarm_control_panel.home_alarm",
    "sensor.gas_consumption"
]

async def initSocket():
    async with websockets.connect('ws://{}:{}/api/websocket'.format(host, port)) as websocket:
         await websocket.send(json.dumps({'type': 'auth','access_token': token}))
         message = await websocket.recv()
         print(message)
         await websocket.send(json.dumps({'id': 1, 'type': 'subscribe_events', 'event_type': 'homeassistant_started'}))
         message = await websocket.recv()
         print(message)
         await websocket.send(json.dumps({'id': 2, 'type': 'subscribe_events', 'event_type': 'state_changed'}))
         response = await websocket.recv()
         print(response)

    while True:
        response = await websocket.recv()
        if message is None:
            break
        
asyncio.get_event_loop().run_until_complete(initSocket())      
               
async def display_date():
    loop = asyncio.get_running_loop()
    end_time = loop.time() + 5.0
    while True:
        print(datetime.datetime.now())
        if (loop.time() + 1.0) >= end_time:
            break
        await asyncio.sleep(1)

#  asyncio.run(display_date())

async def main(): 
    display = asyncio.create_task(display_date())
    listen = asyncio.create_task(initSocket()) 
    await listen
    await display

if __name__ == "__main__":    
    asyncio.run(main())
