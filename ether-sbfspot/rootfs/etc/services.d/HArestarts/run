#!/usr/bin/with-contenv python

import asyncws
import asyncio
import threading
import json
import datetime
import time

token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhMjdlZWQ3NTU2YjU0MDkwYTE4MjJhMTFlYjI4Y2M4ZSIsImlhdCI6MTY2Njc4MTIyOCwiZXhwIjoxOTgyMTQxMjI4fQ.V_3lkaaARk3xpEjqZFuwWY0gDGoS_-JV4ML3OeeJ7Qs'  # fill in your token
host = 'localhost'      # fill in your Home Assistant IP-address or domain

port = 8123
cache = {} # cache
entities = [
    "sensor.power_tariff",
    "sensor.power_consumption_watt",
    "sensor.gas_consumption"
]


async def initLogger():
    print("Start logger...")

    await asyncio.sleep(1) 
    
    while True:    
        if len(cache) == 0:
            await asyncio.sleep(2) 
            
        else:
            try:
                for key in cache:
                    # Do something here:
                    print(cache[key])

                    await asyncio.sleep(2) 
                
            except Exception:
               pass
               
async def display_date():
    loop = asyncio.get_running_loop()
    end_time = loop.time() + 5.0
    while True:
        print(datetime.datetime.now())
        if (loop.time() + 1.0) >= end_time:
            break
        await asyncio.sleep(1)

#  asyncio.run(display_date())

async def main(): 
    display = asyncio.create_task(display_date())
    log = asyncio.create_task(initLogger()) 
    await log
    await display

if __name__ == "__main__":    
    asyncio.run(main())
