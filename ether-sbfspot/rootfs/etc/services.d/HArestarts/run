#!/usr/bin/with-contenv python
# ==============================================================================
# Start the HArestarts to post sensor data on HA restart
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# https://github.com/hassio-addons/bashio
# ==============================================================================


### s6 v3 
###  https://github.com/just-containers/s6-overlay/blob/master/MOVING-TO-V3.md
###  https://github.com/just-containers/s6-overlay/blob/master/README.md


# ## This in particular is confusing, it doesn't seem like this is being adopted when I look for examples in other peoples addons
# ## that relates more to 2. from my PM though
#
# ## Shebangs, which require absolute paths, are an exception, and need manual editing. 
# ##  For instance, #!/usr/bin/with-contenv should be changed to #!/command/with-contenv.
#
# ## This to me means files should move to /rootfs/command...



####  So I want to do something along these lines to solve
####  1. I want to make a script which loops to watch HA restarts, so I can post a sensor update at that point.

### setup has placeholder file to create program in /rootfs/usr/bin/HArestarts/HArestarts
### so this file in /rootfs/etc/services.d/HArestarts/ should be able to use run and finish scripts to comply with s6 v3


# ==================================================

# in reality I am not sure how to write this though. 
# perhaps there is a better way with a py.script or something ( I know even less python compared to my limited bash/bashio knowledge 


##  bashio::services.available('homeassistant')
##  bashio::core.boot('HAOS-sbfsopt', true)    << perhaps this although don't really want to reset the addon on boot
##  bashio::config 'homeassistant' 'online'  << I think it is probably this... that I want
##   bashio::

##  Waitfor    ## not sure what the best way to wait for the trigger would be
##  bashio::config 'homeassistant' 'online'

# delay 20    # delay sometime to ensure things are available 

##  do SBFspot inquiry of inverter
# /usr/bin/sbfspot/SBFspot -v -mqtt -finq

##    then one of these to cause the script to wait until the next restart
## bashio::exit.nok()
## bashio::exit.ok()


import asyncio
import websockets
import logging

logger = logging.getLogger('websockets')
logger.setLevel(logging.DEBUG)
logger.addHandler(logging.StreamHandler())

from requests import get   ##  https://requests.readthedocs.io/en/latest/user/install/#python-m-pip-install-requests

url = "http://supervisor/network/info"
headers = {
    "Authorization": "Bearer $SUPERVISOR_TOKEN",
    "content-type": "application/json",
}

response = get(url, headers=headers)
print(response.text)

